*When would you want to use a remote repository rather than keeping all your work local?
  Most obviously when you'd wanna share work with others or when working on a team project and others need to upload code to the same folder.

*Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?

	When you pull you are ready to accept and work with new files and changes. You may be working on a project in which a change might ruin the design of what you're working on or in general create obstacles for your development. Besides that it is generally a good practice to split commits and changes into logical changes. 
	
*Describe the differences between forks, clones, and branches. When would you use one instead of another?

	Ugh, it' too much explaining.
	Forks are clones but made only in Github. They don't need you to download any code and they do it automatically through their website. Also you're giving props to the creator by forking his project.
	Clones are a copy of content and git log of any repository. They can happen locally or remotely through "git remote".
	Branches, come on, everyone should know what these are by now.
	
*What is the benefit of having a copy of the last known state of the remote stored locally?

	You can check the differences of it and your local work without merging first. You can work offline to work on your own branch and merge them afterwards even if you are offline.
	
*How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?

	Probably through emailing, cloud file sharing, maybe. It would definitely be harder to achieve, even if the learning curve for the Git system in conjunction with Github is a bit steep as soon as you overcome it a ton of possibilities are at your fingertips which make it so worth the trouble.
	
*When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?

	When you want to work on a new feature which may break the project you are currently working on it is a good measure to take to work on a new branch. This helps experiment with the already existing code and what's more being able to come back to the working code at any point in time without the need to be careful that you may not be able to come back to it.
	On the other hand working in one branch makes the Git procedure that much easier to do by having only push and pulls.